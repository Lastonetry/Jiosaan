import logging
import random

from jiosaavn.bot import Bot

from pyrogram import filters
from pyrogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup

logger = logging.getLogger(__name__)

# Replace these with your actual image URLs
PICS = "https://telegra.ph/file/adef46f8e7942c6b9f324.jpg"

@Bot.on_callback_query(filters.regex('^home$'))
@Bot.on_message(filters.command('start') & filters.private & filters.incoming)
async def start_handler(cient: Bot, message: Message|CallbackQuery):
    # Choose a random image URL from the PICS list
    random_pic = random.choice(PICS.split())

    text = (
        f"** ú·¥á ü ü·¥è {message.from_user.mention},\n„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è\n"
        "·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è ·¥õ…¢ s·¥ò·¥è·¥õ…™“ì è  ô·¥è·¥õ! "
        "·¥õ ú…™s ·¥ò·¥è·¥°·¥á Ä“ì·¥ú ü  ô·¥è·¥õ ·¥Ä ü ü·¥è·¥°s  è·¥è·¥ú ·¥õ·¥è s·¥á·¥Ä Ä·¥Ñ ú ·¥Ä…¥·¥Ö ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö s·¥è…¥…¢s, ·¥ò ü·¥Ä è ü…™s·¥õs, ·¥Ä ü ô·¥ú·¥çs ·¥Ä…¥·¥Ö ·¥Ä Ä·¥õ…™s·¥õs ·¥Ö…™ Ä·¥á·¥Ñ·¥õ ü è “ì Ä·¥è·¥ç s·¥ò·¥è·¥õ…™“ì è.\n„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è\n"
        "·¥°…™·¥õ ú ·¥õ ú…™s  ô·¥è·¥õ,  è·¥è·¥ú ·¥Ñ·¥Ä…¥:\n"
        "- s·¥á·¥Ä Ä·¥Ñ ú “ì·¥è Ä s·¥è…¥…¢s, ·¥Ä ü ô·¥ú·¥çs,  ·¥ò ü·¥Ä è ü…™s·¥õs ·¥Ä…¥·¥Ö ·¥Ä Ä·¥õ…™s·¥õs\n"
        "- ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö  è·¥è·¥ú Ä “ì·¥Ä·¥†·¥è·¥ú Ä…™·¥õ·¥á ·¥õ Ä·¥Ä·¥Ñ·¥ã ·¥Ö…™ Ä·¥á·¥Ñ·¥õ ü è ·¥õ·¥è ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç\n"
        "- ·¥áx·¥ò ü·¥è Ä·¥á ·¥†·¥Ä Ä…™·¥è·¥ús “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás ·¥õ·¥Ä…™ ü·¥è Ä·¥á·¥Ö ·¥õ·¥è ·¥á…¥ ú·¥Ä…¥·¥Ñ·¥á  è·¥è·¥ú Ä ·¥ç·¥ús…™·¥Ñ ·¥áx·¥ò·¥á Ä…™·¥á…¥·¥Ñ·¥á**\n\n"
        "**¬© ·¥Ö·¥á·¥† : __[·¥ç·¥è…¢…¢·¥á Ä ·¥ã…™…¥…¢](https://t.me/MoggerKing)__**"
    )

    buttons = [[
        InlineKeyboardButton('üßë‚Äçüíª ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä', url='https://t.me/MoggerKing'),
        InlineKeyboardButton('‚ôªÔ∏è ·¥Ä ô·¥è·¥ú·¥õ', callback_data='about')
        ],[
        InlineKeyboardButton('üí•  ú·¥á ü·¥ò', callback_data='help'),
        InlineKeyboardButton('s·¥á·¥õ·¥õ…™…¥…¢s ‚öô', callback_data='settings')
        ],[
        InlineKeyboardButton('s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á üåê', url='https://t.me/MoggerKing')
    ]]
    if isinstance(message, Message):
        await message.reply_photo(
            photo=random_pic,
            caption=text,
            reply_markup=InlineKeyboardMarkup(buttons),
            quote=True
        )
    else:
        await message.message.edit_media(
            media=random_pic,
            caption=text,
            reply_markup=InlineKeyboardMarkup(buttons)
        )

@Bot.on_callback_query(filters.regex('^help$'))
@Bot.on_message(filters.command('help') & filters.private & filters.incoming)
async def help_handler(client: Bot, message: Message | CallbackQuery):
    text = (
        "**…™·¥õ's ·¥†·¥á Ä è s…™·¥ç·¥ò ü·¥á ·¥õ·¥è ·¥ús·¥á ·¥ç·¥á! üòâ**\n\n"
        "**1. s·¥õ·¥Ä Ä·¥õ  ô è ·¥Ñ·¥è…¥“ì…™…¢·¥ú Ä…™…¥…¢  è·¥è·¥ú Ä ·¥ò Ä·¥á“ì·¥á Ä·¥á…¥·¥Ñ·¥ás ·¥ús…™…¥…¢ ·¥õ ú·¥á `/settings` ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.\n"
        "2. s·¥á…¥·¥Ö ·¥ç·¥á ·¥õ ú·¥á …¥·¥Ä·¥ç·¥á ·¥è“ì ·¥Ä s·¥è…¥…¢, ·¥ò ü·¥Ä è ü…™s·¥õ, ·¥Ä ü ô·¥ú·¥ç ·¥è Ä ·¥Ä Ä·¥õ…™s·¥õ  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è s·¥á·¥Ä Ä·¥Ñ ú “ì·¥è Ä.\n"
        "3. …™' ü ü  ú·¥Ä…¥·¥Ö ü·¥á ·¥õ ú·¥á  Ä·¥ás·¥õ ·¥Ä…¥·¥Ö ·¥ò Ä·¥è·¥†…™·¥Ö·¥á  è·¥è·¥ú ·¥°…™·¥õ ú ·¥õ ú·¥á  Ä·¥ás·¥ú ü·¥õs!\n\n"
        "“ì·¥á·¥á ü “ì Ä·¥á·¥á ·¥õ·¥è ·¥áx·¥ò ü·¥è Ä·¥á ·¥Ä…¥·¥Ö ·¥á…¥·¥ä·¥è è ·¥õ ú·¥á ·¥ç·¥ús…™·¥Ñ! <3 ‚ù£Ô∏è**"
    )

    buttons = [[
        InlineKeyboardButton('‚ôªÔ∏è ·¥Ä ô·¥è·¥ú·¥õ', callback_data='about'),
        InlineKeyboardButton('s·¥á·¥õ·¥õ…™…¥…¢s ‚öô', callback_data='settings')
        ],[
        InlineKeyboardButton(' ú·¥è·¥ç·¥á üè†', callback_data='home'),
        InlineKeyboardButton('·¥Ñ ü·¥ès·¥á ‚ùå', callback_data='close')
    ]]

    if isinstance(message, Message):
        await message.reply_text(text, reply_markup=InlineKeyboardMarkup(buttons), quote=True)
    else:
        await message.message.edit(text, reply_markup=InlineKeyboardMarkup(buttons))

@Bot.on_callback_query(filters.regex('^about$'))
@Bot.on_message(filters.command('about') & filters.private & filters.incoming)
async def about(client: Bot, message: Message|CallbackQuery):
    me = await client.get_me()

    text = (
        f"**ü§ñ ·¥ç è …¥·¥Ä·¥ç·¥á:** {me.mention()}\n\n"
        "**üìù  ü·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á:** [Python 3](https://www.python.org/)\n\n"
        "**üß∞ “ì Ä·¥Ä·¥ç·¥á·¥°·¥è Ä·¥ã:** [Pyrogram](https://github.com/pyrogram/pyrogram)\n\n"
        "**üë®‚Äçüíª ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä:** [·¥ç·¥è…¢…¢·¥á Ä ·¥ã…™…¥…¢](https://t.me/MoggerKing)\n\n"
        "**üîó s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á: ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á ·¥ò Ä·¥è·¥ä·¥á·¥Ñ·¥õ!  ô·¥ú·¥õ …™“ì  è·¥è·¥ú ·¥°·¥Ä…¥…¥·¥Ä  ô·¥ú è, ·¥ò…™…¥…¢ ·¥ç·¥á  ú·¥á Ä·¥á** @MoggerKing\n\n"
    )

    buttons = [[
        InlineKeyboardButton('üí•  ú·¥á ü·¥ò', callback_data='help'),
        InlineKeyboardButton('s·¥á·¥õ·¥õ…™…¥…¢s ‚öô', callback_data='settings')
        ],[
        InlineKeyboardButton(' ú·¥è·¥ç·¥á üè†', callback_data='home'),
        InlineKeyboardButton('·¥Ñ ü·¥ès·¥á ‚ùå', callback_data='close')
    ]]
    if isinstance(message, Message):
        await message.reply_text(text, reply_markup=InlineKeyboardMarkup(buttons), disable_web_page_preview=True, quote=True)
    else:
        await message.message.edit(text, reply_markup=InlineKeyboardMarkup(buttons), disable_web_page_preview=True)

@Bot.on_callback_query(filters.regex('^close$'))
async def close_cb(client: Bot, callback: CallbackQuery):
    await callback.answer()
    await callback.message.delete()
    await callback.message.reply_to_message.delete()
